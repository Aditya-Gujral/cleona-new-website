{"version":3,"file":"CodeMirrorProxy-A8RWnbXx.js","sources":["../../src/codemirror/extensions/useCodeMirrorTheme.ts","../../src/codemirror/defaultCodeModes.ts","../../src/codemirror/extensions/highlightLineExtension.ts","../../src/codemirror/extensions/useFontSize.ts","../../src/codemirror/extensions/theme.ts","../../src/codemirror/CodeMirrorProxy.tsx"],"sourcesContent":["import {rgba, useTheme} from '@sanity/ui'\nimport {useMemo} from 'react'\nimport {createTheme} from '@uiw/codemirror-themes'\nimport {tags as t} from '@lezer/highlight'\nimport {Extension} from '@codemirror/state'\n\nexport function useCodeMirrorTheme(): Extension {\n  const theme = useTheme()\n\n  return useMemo(() => {\n    const {code: codeFont} = theme.sanity.fonts\n    const {base, card, dark, syntax} = theme.sanity.color\n\n    return createTheme({\n      theme: dark ? 'dark' : 'light',\n      settings: {\n        background: card.enabled.bg,\n        foreground: card.enabled.code.fg,\n        lineHighlight: card.enabled.bg,\n        fontFamily: codeFont.family,\n        caret: base.focusRing,\n        selection: rgba(base.focusRing, 0.2),\n        selectionMatch: rgba(base.focusRing, 0.4),\n        gutterBackground: card.disabled.bg,\n        gutterForeground: card.disabled.code.fg,\n        gutterActiveForeground: card.enabled.fg,\n      },\n      styles: [\n        {\n          tag: [t.heading, t.heading2, t.heading3, t.heading4, t.heading5, t.heading6],\n          color: card.enabled.fg,\n        },\n        {tag: t.angleBracket, color: card.enabled.code.fg},\n        {tag: t.atom, color: syntax.keyword},\n        {tag: t.attributeName, color: syntax.attrName},\n        {tag: t.bool, color: syntax.boolean},\n        {tag: t.bracket, color: card.enabled.code.fg},\n        {tag: t.className, color: syntax.className},\n        {tag: t.comment, color: syntax.comment},\n        {tag: t.definition(t.typeName), color: syntax.function},\n        {\n          tag: [\n            t.definition(t.variableName),\n            t.function(t.variableName),\n            t.className,\n            t.attributeName,\n          ],\n          color: syntax.function,\n        },\n        {tag: [t.function(t.propertyName), t.propertyName], color: syntax.function},\n        {tag: t.keyword, color: syntax.keyword},\n        {tag: t.null, color: syntax.number},\n        {tag: t.number, color: syntax.number},\n        {tag: t.meta, color: card.enabled.code.fg},\n        {tag: t.operator, color: syntax.operator},\n        {tag: t.propertyName, color: syntax.property},\n        {tag: [t.string, t.special(t.brace)], color: syntax.string},\n        {tag: t.tagName, color: syntax.className},\n        {tag: t.typeName, color: syntax.keyword},\n      ],\n    })\n  }, [theme])\n}\n","import {StreamLanguage} from '@codemirror/language'\nimport {type Extension} from '@codemirror/state'\n\nexport interface CodeMode {\n  name: string\n  loader: ModeLoader\n}\nexport type ModeLoader = () => Promise<Extension | undefined> | Extension | undefined\n\nexport const defaultCodeModes: CodeMode[] = [\n  {\n    name: 'groq',\n    loader: () =>\n      import('@codemirror/lang-javascript').then(({javascriptLanguage}) => javascriptLanguage),\n  },\n  {\n    name: 'javascript',\n    loader: () =>\n      import('@codemirror/lang-javascript').then(({javascript}) => javascript({jsx: false})),\n  },\n  {\n    name: 'jsx',\n    loader: () =>\n      import('@codemirror/lang-javascript').then(({javascript}) => javascript({jsx: true})),\n  },\n  {\n    name: 'typescript',\n    loader: () =>\n      import('@codemirror/lang-javascript').then(({javascript}) =>\n        javascript({jsx: false, typescript: true}),\n      ),\n  },\n  {\n    name: 'tsx',\n    loader: () =>\n      import('@codemirror/lang-javascript').then(({javascript}) =>\n        javascript({jsx: true, typescript: true}),\n      ),\n  },\n  {name: 'php', loader: () => import('@codemirror/lang-php').then(({php}) => php())},\n  {name: 'sql', loader: () => import('@codemirror/lang-sql').then(({sql}) => sql())},\n  {\n    name: 'mysql',\n    loader: () => import('@codemirror/lang-sql').then(({sql, MySQL}) => sql({dialect: MySQL})),\n  },\n  {name: 'json', loader: () => import('@codemirror/lang-json').then(({json}) => json())},\n  {\n    name: 'markdown',\n    loader: () => import('@codemirror/lang-markdown').then(({markdown}) => markdown()),\n  },\n  {name: 'java', loader: () => import('@codemirror/lang-java').then(({java}) => java())},\n  {name: 'html', loader: () => import('@codemirror/lang-html').then(({html}) => html())},\n  {\n    name: 'csharp',\n    loader: () =>\n      import('@codemirror/legacy-modes/mode/clike').then(({csharp}) =>\n        StreamLanguage.define(csharp),\n      ),\n  },\n  {\n    name: 'sh',\n    loader: () =>\n      import('@codemirror/legacy-modes/mode/shell').then(({shell}) => StreamLanguage.define(shell)),\n  },\n  {\n    name: 'css',\n    loader: () =>\n      import('@codemirror/legacy-modes/mode/css').then(({css}) => StreamLanguage.define(css)),\n  },\n  {\n    name: 'scss',\n    loader: () =>\n      import('@codemirror/legacy-modes/mode/css').then(({css}) => StreamLanguage.define(css)),\n  },\n  {\n    name: 'sass',\n    loader: () =>\n      import('@codemirror/legacy-modes/mode/sass').then(({sass}) => StreamLanguage.define(sass)),\n  },\n  {\n    name: 'ruby',\n    loader: () =>\n      import('@codemirror/legacy-modes/mode/ruby').then(({ruby}) => StreamLanguage.define(ruby)),\n  },\n  {\n    name: 'python',\n    loader: () =>\n      import('@codemirror/legacy-modes/mode/python').then(({python}) =>\n        StreamLanguage.define(python),\n      ),\n  },\n  {\n    name: 'xml',\n    loader: () =>\n      import('@codemirror/legacy-modes/mode/xml').then(({xml}) => StreamLanguage.define(xml)),\n  },\n  {\n    name: 'yaml',\n    loader: () =>\n      import('@codemirror/legacy-modes/mode/yaml').then(({yaml}) => StreamLanguage.define(yaml)),\n  },\n  {\n    name: 'golang',\n    loader: () =>\n      import('@codemirror/legacy-modes/mode/go').then(({go}) => StreamLanguage.define(go)),\n  },\n  {name: 'text', loader: () => undefined},\n  {name: 'batch', loader: () => undefined},\n]\n","/* eslint-disable no-param-reassign */\n\nimport {Extension, StateEffect, StateField} from '@codemirror/state'\nimport {Decoration, EditorView, lineNumbers} from '@codemirror/view'\nimport {ThemeContextValue, rgba} from '@sanity/ui'\n\nconst highlightLineClass = 'cm-highlight-line'\n\nexport const addLineHighlight = StateEffect.define<number>()\nexport const removeLineHighlight = StateEffect.define<number>()\n\nexport const lineHighlightField = StateField.define({\n  create() {\n    return Decoration.none\n  },\n  update(lines, tr) {\n    lines = lines.map(tr.changes)\n    for (const e of tr.effects) {\n      if (e.is(addLineHighlight)) {\n        lines = lines.update({add: [lineHighlightMark.range(e.value)]})\n      }\n      if (e.is(removeLineHighlight)) {\n        lines = lines.update({\n          filter: (from) => {\n            // removeLineHighlight value is lineStart for the highlight, so keep other effects\n            return from !== e.value\n          },\n        })\n      }\n    }\n    return lines\n  },\n  toJSON(value, state) {\n    const highlightLines: number[] = []\n    const iter = value.iter()\n    while (iter.value) {\n      const lineNumber = state.doc.lineAt(iter.from).number\n      if (!highlightLines.includes(lineNumber)) {\n        highlightLines.push(lineNumber)\n      }\n      iter.next()\n    }\n    return highlightLines\n  },\n  fromJSON(value: number[], state) {\n    const lines = state.doc.lines\n    const highlights = value\n      .filter((line) => line <= lines) // one-indexed\n      .map((line) => lineHighlightMark.range(state.doc.line(line).from))\n    highlights.sort((a, b) => a.from - b.from)\n    try {\n      return Decoration.none.update({\n        add: highlights,\n      })\n    } catch (e) {\n      console.error(e)\n      return Decoration.none\n    }\n  },\n  provide: (f) => EditorView.decorations.from(f),\n})\n\nconst lineHighlightMark = Decoration.line({\n  class: highlightLineClass,\n})\n\nexport const highlightState: {\n  [prop: string]: StateField<any>\n} = {\n  highlight: lineHighlightField,\n}\n\nexport interface HighlightLineConfig {\n  onHighlightChange?: (lines: number[]) => void\n  readOnly?: boolean\n  theme: ThemeContextValue\n}\n\nfunction createCodeMirrorTheme(options: {themeCtx: ThemeContextValue}) {\n  const {themeCtx} = options\n  const dark = {color: themeCtx.theme.color.dark[themeCtx.tone]}\n  const light = {color: themeCtx.theme.color.light[themeCtx.tone]}\n\n  return EditorView.baseTheme({\n    '.cm-lineNumbers': {\n      cursor: 'default',\n    },\n    '.cm-line.cm-line': {\n      position: 'relative',\n    },\n\n    // need set background with pseudoelement so it does not render over selection color\n    [`.${highlightLineClass}::before`]: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      zIndex: -3,\n      content: \"''\",\n      boxSizing: 'border-box',\n    },\n    [`&dark .${highlightLineClass}::before`]: {\n      background: rgba(dark.color.muted.caution.pressed.bg, 0.5),\n    },\n    [`&light .${highlightLineClass}::before`]: {\n      background: rgba(light.color.muted.caution.pressed.bg, 0.75),\n    },\n  })\n}\n\nexport const highlightLine = (config: HighlightLineConfig): Extension => {\n  const highlightTheme = createCodeMirrorTheme({themeCtx: config.theme})\n\n  return [\n    lineHighlightField,\n    config.readOnly\n      ? []\n      : lineNumbers({\n          domEventHandlers: {\n            mousedown: (editorView, lineInfo) => {\n              // Determine if the line for the clicked gutter line number has highlighted state or not\n              const line = editorView.state.doc.lineAt(lineInfo.from)\n              let isHighlighted = false\n              editorView.state\n                .field(lineHighlightField)\n                .between(line.from, line.to, (from, to, value) => {\n                  if (value) {\n                    isHighlighted = true\n                    return false // stop iteration\n                  }\n                  return undefined\n                })\n\n              if (isHighlighted) {\n                editorView.dispatch({effects: removeLineHighlight.of(line.from)})\n              } else {\n                editorView.dispatch({effects: addLineHighlight.of(line.from)})\n              }\n              if (config?.onHighlightChange) {\n                config.onHighlightChange(editorView.state.toJSON(highlightState).highlight)\n              }\n              return true\n            },\n          },\n        }),\n    highlightTheme,\n  ]\n}\n\n/**\n * Adds and removes highlights to the provided view using highlightLines\n * @param view\n * @param highlightLines\n */\nexport function setHighlightedLines(view: EditorView, highlightLines: number[]): void {\n  const doc = view.state.doc\n  const lines = doc.lines\n  //1-based line numbers\n  const allLineNumbers = Array.from({length: lines}, (x, i) => i + 1)\n  view.dispatch({\n    effects: allLineNumbers.map((lineNumber) => {\n      const line = doc.line(lineNumber)\n      if (highlightLines?.includes(lineNumber)) {\n        return addLineHighlight.of(line.from)\n      }\n      return removeLineHighlight.of(line.from)\n    }),\n  })\n}\n","import {Extension} from '@codemirror/state'\nimport {EditorView} from '@codemirror/view'\nimport {rem, useTheme} from '@sanity/ui'\nimport {useMemo} from 'react'\n\nexport function useFontSizeExtension(props: {fontSize: number}): Extension {\n  const {fontSize: fontSizeProp} = props\n  const theme = useTheme()\n\n  return useMemo(() => {\n    const {code: codeFont} = theme.sanity.fonts\n    const {fontSize, lineHeight} = codeFont.sizes[fontSizeProp] || codeFont.sizes[2]\n\n    return EditorView.baseTheme({\n      '&': {\n        fontSize: rem(fontSize),\n      },\n\n      '& .cm-scroller': {\n        lineHeight: `${lineHeight / fontSize} !important`,\n      },\n    })\n  }, [fontSizeProp, theme])\n}\n","import {Extension} from '@codemirror/state'\nimport {EditorView} from '@codemirror/view'\nimport {rgba, useRootTheme} from '@sanity/ui'\nimport {useMemo} from 'react'\n\nexport function useThemeExtension(): Extension {\n  const themeCtx = useRootTheme()\n\n  return useMemo(() => {\n    const dark = {color: themeCtx.theme.color.dark[themeCtx.tone]}\n    const light = {color: themeCtx.theme.color.light[themeCtx.tone]}\n\n    return EditorView.baseTheme({\n      '&.cm-editor': {\n        height: '100%',\n      },\n      '&.cm-editor.cm-focused': {\n        outline: 'none',\n      },\n\n      // Matching brackets\n      '&.cm-editor.cm-focused .cm-matchingBracket': {\n        backgroundColor: 'transparent',\n      },\n      '&.cm-editor.cm-focused .cm-nonmatchingBracket': {\n        backgroundColor: 'transparent',\n      },\n      '&dark.cm-editor.cm-focused .cm-matchingBracket': {\n        outline: `1px solid ${dark.color.base.border}`,\n      },\n      '&dark.cm-editor.cm-focused .cm-nonmatchingBracket': {\n        outline: `1px solid ${dark.color.base.border}`,\n      },\n      '&light.cm-editor.cm-focused .cm-matchingBracket': {\n        outline: `1px solid ${light.color.base.border}`,\n      },\n      '&light.cm-editor.cm-focused .cm-nonmatchingBracket': {\n        outline: `1px solid ${light.color.base.border}`,\n      },\n\n      // Size and padding of gutter\n      '& .cm-lineNumbers .cm-gutterElement': {\n        minWidth: `32px !important`,\n        padding: `0 8px !important`,\n      },\n      '& .cm-gutter.cm-foldGutter': {\n        width: `0px !important`,\n      },\n\n      // Color of gutter\n      '&dark .cm-gutters': {\n        color: `${rgba(dark.color.card.enabled.code.fg, 0.5)} !important`,\n        borderRight: `1px solid ${rgba(dark.color.base.border, 0.5)}`,\n      },\n      '&light .cm-gutters': {\n        color: `${rgba(light.color.card.enabled.code.fg, 0.5)} !important`,\n        borderRight: `1px solid ${rgba(light.color.base.border, 0.5)}`,\n      },\n    })\n  }, [themeCtx])\n}\n","import {forwardRef, useCallback, useContext, useEffect, useMemo, useState} from 'react'\nimport CodeMirror, {ReactCodeMirrorProps, ReactCodeMirrorRef} from '@uiw/react-codemirror'\nimport {useCodeMirrorTheme} from './extensions/useCodeMirrorTheme'\nimport {Extension} from '@codemirror/state'\nimport {CodeInputConfigContext} from './CodeModeContext'\nimport {defaultCodeModes} from './defaultCodeModes'\nimport {\n  highlightLine,\n  highlightState,\n  setHighlightedLines,\n} from './extensions/highlightLineExtension'\nimport {EditorView} from '@codemirror/view'\nimport {useRootTheme} from '@sanity/ui'\nimport {useFontSizeExtension} from './extensions/useFontSize'\nimport {useThemeExtension} from './extensions/theme'\n\nexport interface CodeMirrorProps extends ReactCodeMirrorProps {\n  highlightLines?: number[]\n  languageMode?: string\n  onHighlightChange?: (lines: number[]) => void\n}\n\n/**\n * CodeMirrorProxy is a wrapper component around CodeMirror that we lazy load to reduce initial bundle size.\n *\n * It is also responsible for integrating any CodeMirror extensions.\n */\nconst CodeMirrorProxy = forwardRef<ReactCodeMirrorRef, CodeMirrorProps>(\n  function CodeMirrorProxy(props, ref) {\n    const {\n      basicSetup: basicSetupProp,\n      highlightLines,\n      languageMode,\n      onHighlightChange,\n      readOnly,\n      value,\n      ...codeMirrorProps\n    } = props\n\n    const themeCtx = useRootTheme()\n    const codeMirrorTheme = useCodeMirrorTheme()\n    const [editorView, setEditorView] = useState<EditorView | undefined>(undefined)\n\n    // Resolve extensions\n    const themeExtension = useThemeExtension()\n    const fontSizeExtension = useFontSizeExtension({fontSize: 1})\n    const languageExtension = useLanguageExtension(languageMode)\n    const highlightLineExtension = useMemo(\n      () =>\n        highlightLine({\n          onHighlightChange,\n          readOnly,\n          theme: themeCtx,\n        }),\n      [onHighlightChange, readOnly, themeCtx],\n    )\n\n    const extensions = useMemo(() => {\n      const baseExtensions = [\n        themeExtension,\n        fontSizeExtension,\n        highlightLineExtension,\n        EditorView.lineWrapping,\n      ]\n      if (languageExtension) {\n        return [...baseExtensions, languageExtension]\n      }\n      return baseExtensions\n    }, [fontSizeExtension, highlightLineExtension, languageExtension, themeExtension])\n\n    useEffect(() => {\n      if (editorView) {\n        setHighlightedLines(editorView, highlightLines ?? [])\n      }\n    }, [editorView, highlightLines, value])\n\n    const initialState = useMemo(() => {\n      return {\n        json: {\n          doc: value ?? '',\n          selection: {\n            main: 0,\n            ranges: [{anchor: 0, head: 0}],\n          },\n          highlight: highlightLines ?? [],\n        },\n        fields: highlightState,\n      }\n      // only need to calculate this on initial render\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const handleCreateEditor = useCallback((view: EditorView) => {\n      setEditorView(view)\n    }, [])\n\n    const basicSetup = useMemo(\n      () =>\n        basicSetupProp ?? {\n          highlightActiveLine: false,\n        },\n      [basicSetupProp],\n    )\n\n    return (\n      <CodeMirror\n        {...codeMirrorProps}\n        value={value}\n        ref={ref}\n        extensions={extensions}\n        theme={codeMirrorTheme}\n        onCreateEditor={handleCreateEditor}\n        initialState={initialState}\n        basicSetup={basicSetup}\n      />\n    )\n  },\n)\n\nfunction useLanguageExtension(mode?: string) {\n  const codeConfig = useContext(CodeInputConfigContext)\n\n  const [languageExtension, setLanguageExtension] = useState<Extension | undefined>()\n\n  useEffect(() => {\n    const customModes = codeConfig?.codeModes ?? []\n    const modes = [...customModes, ...defaultCodeModes]\n\n    const codeMode = modes.find((m) => m.name === mode)\n    if (!codeMode?.loader) {\n      console.warn(\n        `Found no codeMode for language mode ${mode}, syntax highlighting will be disabled.`,\n      )\n    }\n    let active = true\n    Promise.resolve(codeMode?.loader())\n      .then((extension) => {\n        if (active) {\n          setLanguageExtension(extension)\n        }\n      })\n      .catch((e) => {\n        console.error(`Failed to load language mode ${mode}`, e)\n        if (active) {\n          setLanguageExtension(undefined)\n        }\n      })\n    return () => {\n      active = false\n    }\n  }, [mode, codeConfig])\n\n  return languageExtension\n}\n\nexport default CodeMirrorProxy\n"],"names":["useCodeMirrorTheme","theme","useTheme","useMemo","code","codeFont","sanity","fonts","base","card","dark","syntax","color","createTheme","settings","background","enabled","bg","foreground","fg","lineHighlight","fontFamily","family","caret","focusRing","selection","rgba","selectionMatch","gutterBackground","disabled","gutterForeground","gutterActiveForeground","styles","tag","t","heading","heading2","heading3","heading4","heading5","heading6","angleBracket","atom","keyword","attributeName","attrName","bool","boolean","bracket","className","comment","definition","typeName","function","variableName","propertyName","null","number","meta","operator","property","string","special","brace","tagName","defaultCodeModes","name","loader","then","_ref","javascriptLanguage","_ref2","javascript","jsx","_ref3","_ref4","typescript","_ref5","_ref6","php","_ref7","sql","_ref8","MySQL","dialect","_ref9","json","_ref10","markdown","_ref11","java","_ref12","html","_ref13","csharp","StreamLanguage","define","_ref14","shell","_ref15","css","_ref16","_ref17","sass","_ref18","ruby","_ref19","python","_ref20","xml","_ref21","yaml","_ref22","go","highlightLineClass","addLineHighlight","StateEffect","removeLineHighlight","lineHighlightField","StateField","create","Decoration","none","update","lines","tr","map","changes","e","effects","is","add","lineHighlightMark","range","value","filter","from","toJSON","state","highlightLines","iter","lineNumber","doc","lineAt","includes","push","next","fromJSON","highlights","line","sort","a","b","console","error","provide","f","EditorView","decorations","class","highlightState","highlight","createCodeMirrorTheme","options","themeCtx","tone","light","baseTheme","cursor","position","concat","top","bottom","left","right","zIndex","content","boxSizing","muted","caution","pressed","highlightLine","config","highlightTheme","readOnly","lineNumbers","domEventHandlers","mousedown","editorView","lineInfo","isHighlighted","field","between","to","dispatch","of","onHighlightChange","setHighlightedLines","view","allLineNumbers","Array","length","x","i","useFontSizeExtension","props","fontSize","fontSizeProp","lineHeight","sizes","rem","useThemeExtension","useRootTheme","height","outline","backgroundColor","border","minWidth","padding","width","borderRight","CodeMirrorProxy","forwardRef","CodeMirrorProxy2","ref","basicSetup","basicSetupProp","languageMode","codeMirrorProps","codeMirrorTheme","setEditorView","useState","themeExtension","fontSizeExtension","languageExtension","useLanguageExtension","highlightLineExtension","extensions","baseExtensions","lineWrapping","useEffect","initialState","main","ranges","anchor","head","fields","handleCreateEditor","useCallback","highlightActiveLine","CodeMirror","onCreateEditor","mode","codeConfig","useContext","CodeInputConfigContext","setLanguageExtension","_a","customModes","codeModes","modes","codeMode","find","m","warn","active","Promise","resolve","extension","catch"],"mappings":"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"}