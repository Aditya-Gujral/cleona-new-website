<<<<<<< HEAD
import {DiffOptions, NumberInput, BooleanInput, NumberDiff, BooleanDiff} from '../types'
=======
import {
  type BooleanDiff,
  type BooleanInput,
  type DiffOptions,
  type NumberDiff,
  type NumberInput,
} from '../types'
>>>>>>> origin/main

export function diffNumber<A>(
  fromInput: NumberInput<A>,
  toInput: NumberInput<A>,
<<<<<<< HEAD
  options: DiffOptions
=======
  options: DiffOptions,
>>>>>>> origin/main
): NumberDiff<A> {
  const fromValue = fromInput.value
  const toValue = toInput.value
  const type = fromInput.type

  if (fromValue === toValue)
    return {
      type,
      action: 'unchanged',
      fromValue,
      toValue,
      isChanged: false,
    }

  return {
    type: fromInput.type,
    action: 'changed',
    isChanged: true,
    fromValue: fromValue,
    toValue: toValue,
    annotation: toInput.annotation,
  }
}

export function diffBoolean<A>(
  fromInput: BooleanInput<A>,
  toInput: BooleanInput<A>,
<<<<<<< HEAD
  options: DiffOptions
=======
  options: DiffOptions,
>>>>>>> origin/main
): BooleanDiff<A> {
  const fromValue = fromInput.value
  const toValue = toInput.value
  const type = fromInput.type

  if (fromValue === toValue)
    return {
      type,
      action: 'unchanged',
      fromValue,
      toValue,
      isChanged: false,
    }

  return {
    type: fromInput.type,
    action: 'changed',
    isChanged: true,
    fromValue: fromValue,
    toValue: toValue,
    annotation: toInput.annotation,
  }
}
