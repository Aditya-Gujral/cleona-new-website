"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@sanity/webhook"),r=require("./readBody.cjs");async function t(r,t,a=!0){const i=r.headers.get(e.SIGNATURE_HEADER_NAME);if(!i)return console.error("Missing signature header"),{body:null,isValidSignature:null};const n=await r.text(),o=t?await e.isValidSignature(n,i,t.trim()):null;return!1!==o&&a&&await new Promise((e=>setTimeout(e,3e3))),{body:n.trim()?JSON.parse(n):null,isValidSignature:o}}exports.parseAppBody=t,exports.parseBody=async function(a,i,n=!0){return"text"in a?t(a,i,n):async function(t,a,i=!0){let n=t.headers[e.SIGNATURE_HEADER_NAME];Array.isArray(n)&&(n=n[0]);if(!n)return console.error("Missing signature header"),{body:null,isValidSignature:null};if(t.readableEnded)throw new Error("Request already ended and the POST body can't be read. Have you setup `export {config} from 'next-sanity/webhook' in your webhook API handler?`");const o=await r._readBody(t),s=a?await e.isValidSignature(o,n,a.trim()):null;!1!==s&&i&&await new Promise((e=>setTimeout(e,1e3)));return{body:o.trim()?JSON.parse(o):null,isValidSignature:s}}(a,i,n)};
//# sourceMappingURL=parseBody.cjs.map
