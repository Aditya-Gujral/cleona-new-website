import{isValidSignature as e,SIGNATURE_HEADER_NAME as r}from"@sanity/webhook";import{_readBody as n}from"./readBody.js";async function t(t,a,o=!0){return"text"in t?i(t,a,o):async function(t,i,a=!0){let o=t.headers[r];Array.isArray(o)&&(o=o[0]);if(!o)return console.error("Missing signature header"),{body:null,isValidSignature:null};if(t.readableEnded)throw new Error("Request already ended and the POST body can't be read. Have you setup `export {config} from 'next-sanity/webhook' in your webhook API handler?`");const s=await n(t),u=i?await e(s,o,i.trim()):null;!1!==u&&a&&await new Promise((e=>setTimeout(e,1e3)));return{body:s.trim()?JSON.parse(s):null,isValidSignature:u}}(t,a,o)}async function i(n,t,i=!0){const a=n.headers.get(r);if(!a)return console.error("Missing signature header"),{body:null,isValidSignature:null};const o=await n.text(),s=t?await e(o,a,t.trim()):null;return!1!==s&&i&&await new Promise((e=>setTimeout(e,3e3))),{body:o.trim()?JSON.parse(o):null,isValidSignature:s}}export{i as parseAppBody,t as parseBody};
//# sourceMappingURL=parseBody.js.map
